What is OOP - (standard) structure or way of writing programming using class and object. 

What is a class   - bluprint or template contain with attributes/properties and method. 

Why we need class - let's think you wanna store data of students. if we get this example there are different data type will involve like stId (int) stName (String) and marks (float) etc.., here you can not store different data type 
                    within a one place using common data type like int, String and float right. so, as a solution we get classes to solve this issue. we can store different data type in a class. 

Student student = object define (data type + instance variable) - this will store in the stack and return null - this will allocate in compile time 
student = new Student() - run time 

What new keyword does - this will allocate memory in the run time and return a reference to the student variable
What this keyword does - it will take the reference variable name of that specific obj (not the class variable name) - way to access the reference variable (internally) - if you do not put the this
                        keyword that will confused are you talking about the argument or class variable (this keyword replace with reference variable)
                        it reprecent the specific object.
how to identify constructor - check the class of the obj

Mistake - 
Java constructor - Constructors do not have a return type. 

Student() - this is the constructor (if you do have a this method in your class this is the bydefault constructor) 

Important NOTE - we can also pass a obj to a contructor as a argm and you can call a contructor to another constructor with this keyword (this keyword )
                 1. to deferencited the argument 
                 2. to reference the object
                 3. to call a anther constructor 

Student student1 = new Student();
Student student2 = student1; acctually not allocate the memory address it says to point the student1 reference varible object to the student2 reference variable. 

Practice - 
            Variable two swaping 
            Create a obj and assign to a another obj = Student student = new Student(); - Student student1 = student; (if you change student1 obj it will reflect to the student obj as well)
            Swaping via function (two variables and passing a object) 
            function(int a) { - this is the new variable and function(value) - not a variable = variable a atomatiaclly assign the value after accept the value

            }
Final keyword - you can not change it is like a constant variable. this keyword can be apply for variable, class 
              NOTE:: Final variable has to be initialized in the compile time (why becuese you can not change)
                     and you can not reassinged the object to another one (when you have final keyword to a obj) - when a data type is non primitive you can not reassigned it

Grabadge collection - we can not remove unreference obj by manually. but we can give some instruction when garbadge collection hit (finallized method)

Complie time - memory allocate compile time
